#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none      &none   &none     &none     &none      &none                &none      &none     &none      &none     &none     &none
&kp EQUAL  &kp N1  &kp N2    &kp N3    &kp N4     &kp N5               &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q   &kp W     &kp E     &kp R      &kp T                &kp Y      &kp U     &kp I      &kp O     &kp P     &kp BSLH
&kp LSHFT  &kp A   &kp S     &kp D     &kp F      &kp G                &kp H      &kp J     &kp K      &kp L     &kp SEMI  &kp SQT
&kp LCTRL  &kp Z   &kp X     &kp C     &kp V      &kp B                &kp N      &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
                   &kp LGUI  &kp LALT                                                       &kp LBKT   &kp RBKT
                                       &kp SPACE  &kp DEL   &kp ESC    &kp GRAVE  &kp BSPC  &kp RET
                                       &mo 1      &kp HOME  &kp END    &kp CAPS   &mkp MB2  &mkp MB1
            >;
        };

        Arrows {
            bindings = <
&trans  &trans    &trans        &trans     &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans        &trans     &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &kp UP_ARROW  &trans     &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT  &kp DOWN      &kp RIGHT  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans        &trans     &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
                  &trans        &trans                                               &trans  &trans
                                           &trans  &trans  &trans    &trans  &trans  &trans
                                           &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};

// right hand trackball configuration
// &trackball_peripheral_listener {
//    input-processors =
//     activate layer 3 within 500ms of the trackball moving
//     <&zip_temp_layer 3 500>;
// };
//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // this gets it to the default installation orientation,,,,,,,
        <&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>;

    // activate layer 3 within 500ms of the trackball moving
    // <&zip_temp_layer 3 500>;
    // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),

    <&zip_xy_scaler 1 3>,
        // make this trackball output scrolling events by default instead of cursor movement,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};

//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // this gets it to the default installation orientation,,,,,,,
        <&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>,
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),,,,,,,
        <&zip_xy_scaler 1 3>,
        // make this trackball output scrolling events by default instead of cursor movement,,,,,,,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,,,,,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
